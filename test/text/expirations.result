# expire: after 1 second
# set foo
<<--------------------------------------------------
set foo 0 1 6
fooval
>>--------------------------------------------------
STORED
# foo shoud exists
<<--------------------------------------------------
get foo
>>--------------------------------------------------
VALUE foo 0 6
fooval
END
# foo shoud expired
<<--------------------------------------------------
get foo
>>--------------------------------------------------
END
# expire: time - 1 second
# set foo
# foo shoud be expired
<<--------------------------------------------------
get foo
>>--------------------------------------------------
END
# expire: time + 1 second
# set foo
# foo shoud exists
<<--------------------------------------------------
get foo
>>--------------------------------------------------
VALUE foo 0 6
fooval
END
# foo shoud be expired
<<--------------------------------------------------
get foo
>>--------------------------------------------------
END
# expire: time - 20 second
# set boo
# foo shoud expired
<<--------------------------------------------------
get boo
>>--------------------------------------------------
END
# expire: after 2 second
# add add
<<--------------------------------------------------
add add 0 1 6
addval
>>--------------------------------------------------
STORED
# readd add - shoud be fail
<<--------------------------------------------------
add add 0 1 7
addval1
>>--------------------------------------------------
NOT_STORED
# readd add - shoud be success
<<--------------------------------------------------
add add 0 1 7
addval2
>>--------------------------------------------------
STORED
# return from RO - key should be removed
<<--------------------------------------------------
add key 0 1 3
foo
>>--------------------------------------------------
STORED
# set RO
# set RW
box.space.__mc_memcached:len()
---
- 0
...
<<--------------------------------------------------
flush_all
>>--------------------------------------------------
OK
